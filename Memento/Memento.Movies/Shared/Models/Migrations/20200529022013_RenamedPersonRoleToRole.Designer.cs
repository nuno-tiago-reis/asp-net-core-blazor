// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace Memento.Movies.Shared.Models.Migrations
{
	[DbContext(typeof(MovieContext))]
	[Migration("20200529022013_RenamedPersonRoleToRole")]
	internal partial class RenamedPersonRoleToRole
	{
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
			#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "3.1.0")
				.HasAnnotation("Relational:MaxIdentifierLength", 128)
				.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

			modelBuilder.Entity("Memento.Movies.Shared.Models.MovieGenre", b =>
			{
				b.Property<long>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("bigint")
					.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

				b.Property<DateTime>("CreatedAt")
					.HasColumnType("datetime2");

				b.Property<long>("CreatedBy")
					.HasColumnType("bigint");

				b.Property<long>("GenreId")
					.HasColumnType("bigint");

				b.Property<long>("MovieId")
					.HasColumnType("bigint");

				b.Property<DateTime?>("UpdatedAt")
					.HasColumnType("datetime2");

				b.Property<long?>("UpdatedBy")
					.HasColumnType("bigint");

				b.HasKey("Id");

				b.HasIndex("GenreId");

				b.HasIndex("MovieId");

				b.ToTable("MovieGenres");
			});

			modelBuilder.Entity("Memento.Movies.Shared.Models.MoviePerson", b =>
			{
				b.Property<long>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("bigint")
					.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

				b.Property<DateTime>("CreatedAt")
					.HasColumnType("datetime2");

				b.Property<long>("CreatedBy")
					.HasColumnType("bigint");

				b.Property<long>("MovieId")
					.HasColumnType("bigint");

				b.Property<long>("PersonId")
					.HasColumnType("bigint");

				b.Property<int>("Role")
					.HasColumnType("int");

				b.Property<DateTime?>("UpdatedAt")
					.HasColumnType("datetime2");

				b.Property<long?>("UpdatedBy")
					.HasColumnType("bigint");

				b.HasKey("Id");

				b.HasIndex("MovieId");

				b.HasIndex("PersonId");

				b.ToTable("MoviePersons");
			});

			modelBuilder.Entity("Memento.Movies.Shared.Models.Repositories.Genres.Genre", b =>
			{
				b.Property<long>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("bigint")
					.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

				b.Property<DateTime>("CreatedAt")
					.HasColumnType("datetime2");

				b.Property<long>("CreatedBy")
					.HasColumnType("bigint");

				b.Property<string>("Name")
					.IsRequired()
					.HasColumnType("nvarchar(50)")
					.HasMaxLength(50);

				b.Property<string>("NormalizedName")
					.IsRequired()
					.HasColumnType("nvarchar(50)")
					.HasMaxLength(50);

				b.Property<DateTime?>("UpdatedAt")
					.HasColumnType("datetime2");

				b.Property<long?>("UpdatedBy")
					.HasColumnType("bigint");

				b.HasKey("Id");

				b.HasIndex("Name")
					.IsUnique();

				b.HasIndex("NormalizedName")
					.IsUnique();

				b.ToTable("Genres");
			});

			modelBuilder.Entity("Memento.Movies.Shared.Models.Repositories.Movies.Movie", b =>
			{
				b.Property<long>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("bigint")
					.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

				b.Property<DateTime>("CreatedAt")
					.HasColumnType("datetime2");

				b.Property<long>("CreatedBy")
					.HasColumnType("bigint");

				b.Property<bool>("InTheaters")
					.HasColumnType("bit");

				b.Property<string>("Name")
					.IsRequired()
					.HasColumnType("nvarchar(250)")
					.HasMaxLength(250);

				b.Property<string>("NormalizedName")
					.IsRequired()
					.HasColumnType("nvarchar(250)")
					.HasMaxLength(250);

				b.Property<string>("PictureUrl")
					.IsRequired()
					.HasColumnType("nvarchar(250)")
					.HasMaxLength(250);

				b.Property<DateTime>("ReleaseDate")
					.HasColumnType("datetime2");

				b.Property<string>("Summary")
					.IsRequired()
					.HasColumnType("nvarchar(500)")
					.HasMaxLength(500);

				b.Property<string>("TrailerUrl")
					.IsRequired()
					.HasColumnType("nvarchar(250)")
					.HasMaxLength(250);

				b.Property<DateTime?>("UpdatedAt")
					.HasColumnType("datetime2");

				b.Property<long?>("UpdatedBy")
					.HasColumnType("bigint");

				b.HasKey("Id");

				b.HasIndex("Name");

				b.HasIndex("NormalizedName");

				b.HasIndex("ReleaseDate");

				b.HasIndex("NormalizedName", "ReleaseDate")
					.IsUnique();

				b.ToTable("Movies");
			});

			modelBuilder.Entity("Memento.Movies.Shared.Models.Repositories.Persons.Person", b =>
			{
				b.Property<long>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("bigint")
					.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

				b.Property<string>("Biography")
					.IsRequired()
					.HasColumnType("nvarchar(500)")
					.HasMaxLength(500);

				b.Property<DateTime>("BirthDate")
					.HasColumnType("datetime2");

				b.Property<DateTime>("CreatedAt")
					.HasColumnType("datetime2");

				b.Property<long>("CreatedBy")
					.HasColumnType("bigint");

				b.Property<string>("Name")
					.IsRequired()
					.HasColumnType("nvarchar(250)")
					.HasMaxLength(250);

				b.Property<string>("NormalizedName")
					.IsRequired()
					.HasColumnType("nvarchar(250)")
					.HasMaxLength(250);

				b.Property<string>("PictureUrl")
					.IsRequired()
					.HasColumnType("nvarchar(250)")
					.HasMaxLength(250);

				b.Property<DateTime?>("UpdatedAt")
					.HasColumnType("datetime2");

				b.Property<long?>("UpdatedBy")
					.HasColumnType("bigint");

				b.HasKey("Id");

				b.HasIndex("BirthDate");

				b.HasIndex("Name");

				b.HasIndex("NormalizedName");

				b.HasIndex("NormalizedName", "BirthDate")
					.IsUnique();

				b.ToTable("Persons");
			});

			modelBuilder.Entity("Memento.Movies.Shared.Models.MovieGenre", b =>
			{
				b.HasOne("Memento.Movies.Shared.Models.Repositories.Genres.Genre", "Genre")
					.WithMany("Movies")
					.HasForeignKey("GenreId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Memento.Movies.Shared.Models.Repositories.Movies.Movie", "Movie")
					.WithMany("Genres")
					.HasForeignKey("MovieId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();
			});

			modelBuilder.Entity("Memento.Movies.Shared.Models.MoviePerson", b =>
			{
				b.HasOne("Memento.Movies.Shared.Models.Repositories.Movies.Movie", "Movie")
					.WithMany("Persons")
					.HasForeignKey("MovieId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();

				b.HasOne("Memento.Movies.Shared.Models.Repositories.Persons.Person", "Person")
					.WithMany("Movies")
					.HasForeignKey("PersonId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();
			});
			#pragma warning restore 612, 618
		}
	}
}